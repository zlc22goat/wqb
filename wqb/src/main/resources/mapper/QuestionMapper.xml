<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wqb.mapper.QuestionMapper">
    <select id="getMastery" resultMap="MasteryMap">
        select mastery, count(mastery) as count
        from question
        where student_id = #{id}
        group by mastery
        order by mastery
    </select>
    
    <resultMap id="MasteryMap" type="com.wqb.vo.MasteryVo">
        <result property="mastery" column="mastery"></result>
        <result property="count" column="count"></result>
    </resultMap>

    <select id="getLevel" resultMap="LevelMap">
        select level, count(level) as count
        from question
        where student_id = #{id}
        group by level
        order by level
    </select>

    <resultMap id="LevelMap" type="com.wqb.vo.LevelVo">
        <result property="level" column="level"></result>
        <result property="count" column="count"></result>
    </resultMap>

    <select id="getCourse" resultMap="CourseMap">
        select c.c_name, count(q.course_id) as count
        from question q
        left join course c
        on q.course_id = c.c_id
        where q.student_id = #{id}
        group by q.course_id
        order by q.course_id
    </select>

    <resultMap id="CourseMap" type="com.wqb.vo.CourseVo">
        <result property="cName" column="c_name"></result>
        <result property="count" column="count"></result>
    </resultMap>

    <select id="getReview" resultMap="ReviewMap">
        select review, count(review) as count
        from question
        where student_id = #{id}
        group by review
        order by review
    </select>

    <resultMap id="ReviewMap" type="com.wqb.vo.ReviewVo">
        <result property="review" column="review"></result>
        <result property="count" column="count"></result>
    </resultMap>

    <select id="selectQuestion" resultMap="QuestionCourseVoMap">
        select q.*, c.c_name
        from Question q
        left join Course c
        on q.course_id = c.c_id
        ${ew.customSqlSegment}
    </select>

    <resultMap id="QuestionCourseVoMap" type="com.wqb.vo.QuestionCourseVo">
        <id property="id" column="id"></id>
        <result property="body" column="body"></result>
        <result property="bodyPic" column="body_pic"></result>
        <result property="optiona" column="optionA"></result>
        <result property="optionaPic" column="optiona_pic"></result>
        <result property="optionb" column="optionB"></result>
        <result property="optionbPic" column="optionb_pic"></result>
        <result property="optionc" column="optionC"></result>
        <result property="optioncPic" column="optionc_pic"></result>
        <result property="optiond" column="optionD"></result>
        <result property="optiondPic" column="optiond_pic"></result>

        <result property="answerOption" column="answer_option"></result>
        <result property="answer" column="answer"></result>
        <result property="answerPic" column="answer_pic"></result>
        <result property="myAnswerOption" column="my_answer_option"></result>
        <result property="myAnswer" column="my_answer"></result>
        <result property="myAnswerPic" column="my_answer_pic"></result>

        <result property="detail" column="detail"></result>
        <result property="detailPic" column="detail_pic"></result>
        <result property="level" column="level"></result>
        <result property="cName" column="c_name"></result>
        <result property="courseId" column="course_id"></result>
        <result property="type" column="type"></result>
        <result property="studentId" column="student_id"></result>
        <result property="remark" column="remark"></result>
        <result property="mastery" column="mastery"></result>

        <result property="createTime" column="create_time"></result>
        <result property="updateTime" column="update_time"></result>
        <result property="review" column="review"></result>
    </resultMap>

    <select id="getNewQue" resultMap="NewQueMap">
        SELECT a.month, IFNULL(b.count,0) AS count
        FROM (
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 11 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 10 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 9 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 8 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 7 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 6 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 5 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 4 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 3 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 2 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(CURDATE(),'%Y-%m') AS month
            ) a
            LEFT JOIN (
            SELECT DATE_FORMAT(create_time,'%Y-%m')  AS DATETIME, count(*) AS count
            FROM question
            WHERE question.student_id = #{id}
            GROUP BY DATE_FORMAT(create_time,'%Y-%m')
            ) b ON a.month = b.datetime
    </select>

    <resultMap id="NewQueMap" type="com.wqb.vo.NewQueVo">
        <result property="month" column="month"></result>
        <result property="count" column="count"></result>
    </resultMap>

    <select id="getUpdateQue" resultMap="UpdateQueMap">
        SELECT a.month, IFNULL(b.count,0) AS count
        FROM (
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 11 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 10 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 9 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 8 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 7 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 6 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 5 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 4 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 3 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 2 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(CURDATE(),'%Y-%m') AS month
            ) a
            LEFT JOIN (
            SELECT DATE_FORMAT(answer.create_time,'%Y-%m')  AS DATETIME, count(answer.create_time) AS count
            FROM answer
            LEFT JOIN question
            ON answer.question_id = question.id
            WHERE question.student_id = #{id}
            GROUP BY DATE_FORMAT(answer.create_time,'%Y-%m')
            ) b ON a.month = b.datetime
    </select>

    <resultMap id="UpdateQueMap" type="com.wqb.vo.UpdateQueVo">
        <result property="month" column="month"></result>
        <result property="count" column="count"></result>
    </resultMap>
</mapper>

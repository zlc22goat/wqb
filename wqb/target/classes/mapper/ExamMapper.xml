<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wqb.mapper.ExamMapper">

    <select id="selectDetail" resultMap="QuestionCourseVoMap">
        select q.*, c.c_name
        from Question q
        left join Course c
        on q.course_id = c.c_id
        where q.id in (
            select question_id
            from relation
            where exam_id = #{id}
        )
    </select>

    <select id="selectAllQuestion" resultType="com.wqb.entity.Question">
        select q.*
        from Question q
        where q.id in (
            select question_id
            from relation
            where exam_id = #{id}
        )
    </select>

    <select id="selectQuestionId" resultType="java.lang.Integer">
        select q.id
        from Question q
        where q.id in (
            select question_id
            from relation
            where exam_id = #{id}
        )
    </select>

    <resultMap id="QuestionCourseVoMap" type="com.wqb.vo.QuestionCourseVo">
        <id property="id" column="id"></id>
        <result property="body" column="body"></result>
        <result property="bodyPic" column="body_pic"></result>
        <result property="optiona" column="optionA"></result>
        <result property="optionaPic" column="optiona_pic"></result>
        <result property="optionb" column="optionB"></result>
        <result property="optionbPic" column="optionb_pic"></result>
        <result property="optionc" column="optionC"></result>
        <result property="optioncPic" column="optionc_pic"></result>
        <result property="optiond" column="optionD"></result>
        <result property="optiondPic" column="optiond_pic"></result>

        <result property="answerOption" column="answer_option"></result>
        <result property="answer" column="answer"></result>
        <result property="answerPic" column="answer_pic"></result>
        <result property="myAnswerOption" column="my_answer_option"></result>
        <result property="myAnswer" column="my_answer"></result>
        <result property="myAnswerPic" column="my_answer_pic"></result>

        <result property="detail" column="detail"></result>
        <result property="detailPic" column="detail_pic"></result>
        <result property="level" column="level"></result>
        <result property="cName" column="c_name"></result>
        <result property="type" column="type"></result>
        <result property="studentId" column="student_id"></result>
        <result property="remark" column="remark"></result>
        <result property="mastery" column="mastery"></result>

        <result property="createTime" column="create_time"></result>
        <result property="updateTime" column="update_time"></result>
    </resultMap>

    <select id="getState" resultMap="StateMap">
        select state, count(state) as count
        from exam
        where student_id = #{id}
        group by state
    </select>

    <resultMap id="StateMap" type="com.wqb.vo.NewExamVo">
        <result property="state" column="state"></result>
        <result property="stateCount" column="count"></result>
    </resultMap>

    <select id="getMark" resultMap="MarkMap">
        select a.count count, a.markRemark as markRemark
        from (
            select count(mark) as count, '不及格' as markRemark
            from exam where mark &lt; 60
            and student_id = #{id}
            and state = 1
            union all

            select count(mark) as count, '及格' as markRemark
            from exam where mark >= 60 and mark &lt; 70
            and student_id = #{id}
            and state = 1
            union all

            select count(mark) as count, '中' as markRemark
            from exam where mark >= 70 and mark &lt; 80
            and student_id = #{id}
            and state = 1
            union all

            select count(mark) as count, '良好' as markRemark
            from exam where mark >= 80 and mark &lt; 90
            and student_id = #{id}
            and state = 1
            union all

            select count(mark) as count, '优秀' as markRemark
            from exam where mark >= 90
            and student_id = #{id}
            and state = 1
            ) a
    </select>

    <select id="getAllMark" resultMap="MarkMap">
        select a.count count, a.markRemark as markRemark
        from (
            select count(mark) as count, '不及格' as markRemark
            from exam where mark &lt; 60
            and state = 1
            union all

            select count(mark) as count, '及格' as markRemark
            from exam where mark >= 60 and mark &lt; 70
            and state = 1
            union all

            select count(mark) as count, '中' as markRemark
            from exam where mark >= 70 and mark &lt; 80
            and state = 1
            union all

            select count(mark) as count, '良好' as markRemark
            from exam where mark >= 80 and mark &lt; 90
            and state = 1
            union all

            select count(mark) as count, '优秀' as markRemark
            from exam where mark >= 90
            and state = 1
            ) a
    </select>

    <resultMap id="MarkMap" type="com.wqb.vo.NewExamVo">
        <result property="markRemark" column="markRemark"></result>
        <result property="markCount" column="count"></result>
    </resultMap>

    <select id="getNewExam" resultMap="NewExamMap">
        SELECT a.month, IFNULL(b.count,0) AS count
        FROM (
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 11 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 10 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 9 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 8 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 7 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 6 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 5 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 4 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 3 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 2 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 MONTH),'%Y-%m') AS month
            UNION ALL
            SELECT DATE_FORMAT(CURDATE(),'%Y-%m') AS month
            ) a
            LEFT JOIN (
            SELECT DATE_FORMAT(create_time,'%Y-%m')  AS DATETIME, count(*) AS count
            FROM exam
            WHERE exam.student_id = #{id}
            GROUP BY DATE_FORMAT(create_time,'%Y-%m')
            ) b ON a.month = b.datetime
    </select>

    <resultMap id="NewExamMap" type="com.wqb.vo.NewExamVo">
        <result property="month" column="month"></result>
        <result property="monthCount" column="count"></result>
    </resultMap>
</mapper>
